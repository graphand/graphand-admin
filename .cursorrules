## Graphand Admin Panel - Development Prompt

You are responsible for developing and maintaining the **Graphand admin panel**, designed for users of Graphand—a serverless SaaS framework that provides a fully managed backend. Graphand seamlessly integrates databases, APIs, cloud functions, and storage in one scalable, secure, and reliable platform, simplifying cloud application development by removing infrastructure complexities.

### 📌 Application Overview

The admin panel enables Graphand users to efficiently manage:

- Projects
- Subscriptions
- Organizations
- Collaborators
- Additional administrative tasks

---

### 🚧 Tech Stack

- **Framework:** Next.js with App Router
- **UI Components:** Shadcn UI
- **Styling:** Tailwind CSS
- **Forms:** react-hook-form with Zod validation
- **State Management:** Zustand
- **Data Fetching:** react-query
- **Graphand Integration:** `@graphand/client` and `@graphand/core`
- **Path Alias:** `@` references the `src` folder
- **Package Management:** Use `pnpm` exclusively (never use `npm`)

---

### ✅ Development Guidelines

- **Never** modify Shadcn-generated components (`@/components/ui`) directly.
- Before creating a new component, confirm if an existing component already fulfills your needs by checking:
  - Shadcn UI documentation
  - The `@/components/ui` directory
- Always consult the Graphand documentation prior to implementing data fetching logic to ensure correct use of the client.

---

### 🔐 Authentication System

- **Client Module:** Graphand Auth (`@graphand/client-module-auth`)
- **Client-side Storage:** Authentication state managed via cookies with the `AuthStorage` adapter
- **Server-side Authentication:** Utilize `createServerClient()` utility
- **Auth Helpers:** Located at `@/lib/auth.ts`

---

### 🌐 Internationalization (i18n) System

- **Library:** `next-intl`
- **Locale Management:** Managed via the `NEXT_LOCALE` cookie
- **Translation Files:** JSON located at `public/locales/{locale}.json` (e.g., `en.json`, `fr.json`)
- **Custom Hook:** Use the `useTranslation` hook from `@/lib/translation.ts` for translations

---

### 🎨 Design System & UI Principles

- **Design Philosophy:** Minimalist, clean aesthetic inspired by Notion 🎨
- **Theme:** Default Shadcn UI theme with subtle customizations
- **Emojis:** Strategically use emojis 🚀 to improve user experience and highlight important elements
- **Whitespace & Typography:** Prioritize readability with ample whitespace and clean typography
- **Consistency:** Maintain uniform spacing, color palettes, and styling across all components
- **Usability:** Emphasize intuitive navigation and clear visual hierarchy ✨
- **Responsive Design:** Optimize for all device sizes 📱
- **Animations & Transitions:** Subtle animations and transitions to enhance user interaction without causing distractions
